Description: >
  This template contains the security groups required by our entire stack.

Parameters:
  EnvironmentName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    Description: An environment name that will be prefixed to resource names.
    Type: String
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: The VPC ID the Security Groups should be deployed to
  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup::Id'
    Description: The Security Group that grants access to the RDS.
Resources:

  ECSHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VPCID
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
      # Only allow inbound access to ECS from the ELB
      - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup 
        IpProtocol: '-1'
      Tags: 
      - Key: Name
        Value: !Sub ${EnvironmentName}-ECS-Hosts

  # Allow ingress from ECS to the RDS
  RDSECSIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref RDSSecurityGroup
      SourceSecurityGroupId: !Ref ECSHostSecurityGroup
      IpProtocol: '-1'

  # This security group defines who/where is allowed to access the Application Load Balancer.
  # The Ingress rules will be added to this Security Group by the subtemplates of this stack.
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VPCID
      GroupDescription: Access to the load balancer that sits in front of ECS
      Tags: 
      - Key: Name
        Value: !Sub ${EnvironmentName}-LoadBalancers

Outputs:

  ECSHostSecurityGroup: 
    Description: A reference to the security group for ECS hosts
    Value: !Ref ECSHostSecurityGroup

  LoadBalancerSecurityGroup:
    Description: A reference to the security group for load balancers
    Value: !Ref LoadBalancerSecurityGroup

